{
    "schemes": [
        "http"
    ],
    "swagger": "2.0",
    "info": {
        "description": "Demo wiki backend in Go",
        "title": "EasyGoDocs API",
        "contact": {},
        "version": "1.0"
    },
    "basePath": "/api/v1",
    "paths": {
        "/entities": {
            "get": {
                "security": [
                    {
                        "BearerAuth": []
                    }
                ],
                "description": "Returns the hierarchical tree of all permitted entities.",
                "produces": [
                    "application/json"
                ],
                "tags": [
                    "entities"
                ],
                "summary": "Get full entity tree",
                "responses": {
                    "200": {
                        "description": "OK",
                        "schema": {
                            "type": "array",
                            "items": {
                                "$ref": "#/definitions/entity.Node"
                            }
                        }
                    },
                    "default": {
                        "description": "Error",
                        "schema": {
                            "$ref": "#/definitions/apperr.appError"
                        }
                    }
                }
            },
            "post": {
                "security": [
                    {
                        "BearerAuth": []
                    }
                ],
                "description": "Creates a new entity. Requires write permission for the parent entity. if root entity, requires admin role.",
                "consumes": [
                    "application/json"
                ],
                "produces": [
                    "application/json"
                ],
                "tags": [
                    "entities"
                ],
                "summary": "Create entity",
                "parameters": [
                    {
                        "description": "Create entity payload",
                        "name": "request",
                        "in": "body",
                        "required": true,
                        "schema": {
                            "$ref": "#/definitions/usecase.CreateEntityCmd"
                        }
                    }
                ],
                "responses": {
                    "201": {
                        "description": "Created",
                        "schema": {
                            "$ref": "#/definitions/http.CreateEntityResp"
                        }
                    },
                    "default": {
                        "description": "Error",
                        "schema": {
                            "$ref": "#/definitions/apperr.appError"
                        }
                    }
                }
            }
        },
        "/entities/{entity_id}": {
            "get": {
                "security": [
                    {
                        "BearerAuth": []
                    }
                ],
                "description": "Returns a single entity by its ID. Requires read permission.",
                "produces": [
                    "application/json"
                ],
                "tags": [
                    "entities"
                ],
                "summary": "Get entity by ID",
                "parameters": [
                    {
                        "type": "string",
                        "description": "Entity ID",
                        "name": "entity_id",
                        "in": "path",
                        "required": true
                    }
                ],
                "responses": {
                    "200": {
                        "description": "OK",
                        "schema": {
                            "$ref": "#/definitions/entity.Entity"
                        }
                    },
                    "default": {
                        "description": "Error",
                        "schema": {
                            "$ref": "#/definitions/apperr.appError"
                        }
                    }
                }
            },
            "put": {
                "security": [
                    {
                        "BearerAuth": []
                    }
                ],
                "description": "Updates an existing entity. Requires write permission. If changes parent, requires write permission for the new and old parents as well.",
                "consumes": [
                    "application/json"
                ],
                "tags": [
                    "entities"
                ],
                "summary": "Update entity",
                "parameters": [
                    {
                        "type": "string",
                        "description": "Entity ID",
                        "name": "entity_id",
                        "in": "path",
                        "required": true
                    },
                    {
                        "description": "Update entity payload",
                        "name": "request",
                        "in": "body",
                        "required": true,
                        "schema": {
                            "$ref": "#/definitions/http.UpdateEntityInput"
                        }
                    }
                ],
                "responses": {
                    "204": {
                        "description": "No Content"
                    },
                    "default": {
                        "description": "Error",
                        "schema": {
                            "$ref": "#/definitions/apperr.appError"
                        }
                    }
                }
            },
            "delete": {
                "security": [
                    {
                        "BearerAuth": []
                    }
                ],
                "description": "Deletes an entity by ID. Requires write permission for the entity.",
                "tags": [
                    "entities"
                ],
                "summary": "Delete entity",
                "parameters": [
                    {
                        "type": "string",
                        "description": "Entity ID",
                        "name": "entity_id",
                        "in": "path",
                        "required": true
                    }
                ],
                "responses": {
                    "204": {
                        "description": "No Content"
                    },
                    "default": {
                        "description": "Error",
                        "schema": {
                            "$ref": "#/definitions/apperr.appError"
                        }
                    }
                }
            }
        },
        "/entities/{entity_id}/versions": {
            "get": {
                "security": [
                    {
                        "BearerAuth": []
                    }
                ],
                "description": "Returns list of all versions for an entity. Requires read permission.",
                "produces": [
                    "application/json"
                ],
                "tags": [
                    "entities"
                ],
                "summary": "List entity versions",
                "parameters": [
                    {
                        "type": "string",
                        "description": "Entity ID",
                        "name": "entity_id",
                        "in": "path",
                        "required": true
                    }
                ],
                "responses": {
                    "200": {
                        "description": "OK",
                        "schema": {
                            "type": "array",
                            "items": {
                                "$ref": "#/definitions/entity.Entity"
                            }
                        }
                    },
                    "default": {
                        "description": "Error",
                        "schema": {
                            "$ref": "#/definitions/apperr.appError"
                        }
                    }
                }
            }
        },
        "/entities/{entity_id}/versions/{version}": {
            "get": {
                "security": [
                    {
                        "BearerAuth": []
                    }
                ],
                "description": "Returns a specific version of an entity. Requires read permission.",
                "produces": [
                    "application/json"
                ],
                "tags": [
                    "entities"
                ],
                "summary": "Get specific entity version",
                "parameters": [
                    {
                        "type": "string",
                        "description": "Entity ID",
                        "name": "entity_id",
                        "in": "path",
                        "required": true
                    },
                    {
                        "type": "integer",
                        "description": "Version number",
                        "name": "version",
                        "in": "path",
                        "required": true
                    }
                ],
                "responses": {
                    "200": {
                        "description": "OK",
                        "schema": {
                            "$ref": "#/definitions/entity.Entity"
                        }
                    },
                    "default": {
                        "description": "Error",
                        "schema": {
                            "$ref": "#/definitions/apperr.appError"
                        }
                    }
                }
            }
        },
        "/login": {
            "post": {
                "description": "Authenticate user and get tokens",
                "consumes": [
                    "application/json"
                ],
                "produces": [
                    "application/json"
                ],
                "tags": [
                    "auth"
                ],
                "summary": "Login",
                "parameters": [
                    {
                        "description": "credentials",
                        "name": "request",
                        "in": "body",
                        "required": true,
                        "schema": {
                            "$ref": "#/definitions/http.LoginInput"
                        }
                    }
                ],
                "responses": {
                    "200": {
                        "description": "OK",
                        "schema": {
                            "$ref": "#/definitions/auth.Tokens"
                        }
                    },
                    "400": {
                        "description": "Bad Request",
                        "schema": {
                            "$ref": "#/definitions/apperr.appError"
                        }
                    }
                }
            }
        },
        "/refresh": {
            "post": {
                "description": "Refreshes the access and refresh tokens using a valid refresh token",
                "consumes": [
                    "application/json"
                ],
                "produces": [
                    "application/json"
                ],
                "tags": [
                    "auth"
                ],
                "summary": "Refresh access token",
                "parameters": [
                    {
                        "description": "Refresh token payload",
                        "name": "request",
                        "in": "body",
                        "required": true,
                        "schema": {
                            "$ref": "#/definitions/auth.RefreshToken"
                        }
                    }
                ],
                "responses": {
                    "200": {
                        "description": "OK",
                        "schema": {
                            "$ref": "#/definitions/auth.Tokens"
                        }
                    },
                    "default": {
                        "description": "Error",
                        "schema": {
                            "$ref": "#/definitions/apperr.appError"
                        }
                    }
                }
            }
        },
        "/register": {
            "post": {
                "security": [
                    {
                        "BearerAuth": []
                    }
                ],
                "description": "Creates a new user.",
                "consumes": [
                    "application/json"
                ],
                "tags": [
                    "users"
                ],
                "summary": "Create user",
                "parameters": [
                    {
                        "description": "Create user payload",
                        "name": "request",
                        "in": "body",
                        "required": true,
                        "schema": {
                            "$ref": "#/definitions/http.CreateUserInput"
                        }
                    }
                ],
                "responses": {
                    "201": {
                        "description": "Created"
                    },
                    "default": {
                        "description": "Error",
                        "schema": {
                            "$ref": "#/definitions/apperr.appError"
                        }
                    }
                }
            }
        },
        "/roles": {
            "get": {
                "security": [
                    {
                        "BearerAuth": []
                    }
                ],
                "description": "Returns a list of roles for the specified user ID. Requires admin privileges or self-access.",
                "produces": [
                    "application/json"
                ],
                "tags": [
                    "roles"
                ],
                "summary": "List roles assigned to a user",
                "parameters": [
                    {
                        "type": "string",
                        "description": "User ID",
                        "name": "user_id",
                        "in": "query",
                        "required": true
                    }
                ],
                "responses": {
                    "200": {
                        "description": "OK",
                        "schema": {
                            "type": "array",
                            "items": {
                                "$ref": "#/definitions/auth.UserRole"
                            }
                        }
                    },
                    "default": {
                        "description": "Error",
                        "schema": {
                            "$ref": "#/definitions/apperr.appError"
                        }
                    }
                }
            },
            "post": {
                "security": [
                    {
                        "BearerAuth": []
                    }
                ],
                "description": "Adds a role for a user in relation to an entity. Requires admin privileges.",
                "consumes": [
                    "application/json"
                ],
                "tags": [
                    "roles"
                ],
                "summary": "Assign role to user",
                "parameters": [
                    {
                        "description": "User role payload",
                        "name": "request",
                        "in": "body",
                        "required": true,
                        "schema": {
                            "$ref": "#/definitions/auth.UserRole"
                        }
                    }
                ],
                "responses": {
                    "204": {
                        "description": "No Content"
                    },
                    "default": {
                        "description": "Error",
                        "schema": {
                            "$ref": "#/definitions/apperr.appError"
                        }
                    }
                }
            },
            "delete": {
                "security": [
                    {
                        "BearerAuth": []
                    }
                ],
                "description": "Deletes a user role assignment for an entity. Requires admin privileges.",
                "consumes": [
                    "application/json"
                ],
                "tags": [
                    "roles"
                ],
                "summary": "Remove role from user",
                "parameters": [
                    {
                        "description": "User role payload",
                        "name": "request",
                        "in": "body",
                        "required": true,
                        "schema": {
                            "$ref": "#/definitions/auth.UserRole"
                        }
                    }
                ],
                "responses": {
                    "204": {
                        "description": "No Content"
                    },
                    "default": {
                        "description": "Error",
                        "schema": {
                            "$ref": "#/definitions/apperr.appError"
                        }
                    }
                }
            }
        },
        "/sessions": {
            "get": {
                "security": [
                    {
                        "BearerAuth": []
                    }
                ],
                "description": "Returns all active sessions for the specified user. Requires admin privileges or self-access.",
                "produces": [
                    "application/json"
                ],
                "tags": [
                    "sessions"
                ],
                "summary": "List sessions by user ID",
                "parameters": [
                    {
                        "type": "string",
                        "description": "User ID",
                        "name": "user_id",
                        "in": "query",
                        "required": true
                    }
                ],
                "responses": {
                    "200": {
                        "description": "OK",
                        "schema": {
                            "type": "array",
                            "items": {
                                "$ref": "#/definitions/auth.Session"
                            }
                        }
                    },
                    "default": {
                        "description": "Error",
                        "schema": {
                            "$ref": "#/definitions/apperr.appError"
                        }
                    }
                }
            },
            "delete": {
                "security": [
                    {
                        "BearerAuth": []
                    }
                ],
                "description": "Deletes all active sessions for the specified user. Requires admin privileges or self-access.",
                "tags": [
                    "sessions"
                ],
                "summary": "Delete all sessions for user",
                "parameters": [
                    {
                        "type": "string",
                        "description": "User ID",
                        "name": "user_id",
                        "in": "query",
                        "required": true
                    }
                ],
                "responses": {
                    "204": {
                        "description": "No Content"
                    },
                    "default": {
                        "description": "Error",
                        "schema": {
                            "$ref": "#/definitions/apperr.appError"
                        }
                    }
                }
            }
        },
        "/sessions/{session_id}": {
            "delete": {
                "security": [
                    {
                        "BearerAuth": []
                    }
                ],
                "description": "Deletes a specific session for a given user. Requires admin privileges or self-access.",
                "tags": [
                    "sessions"
                ],
                "summary": "Delete session by ID",
                "parameters": [
                    {
                        "type": "string",
                        "description": "Session ID",
                        "name": "session_id",
                        "in": "path",
                        "required": true
                    },
                    {
                        "type": "string",
                        "description": "User ID",
                        "name": "user_id",
                        "in": "query",
                        "required": true
                    }
                ],
                "responses": {
                    "204": {
                        "description": "No Content"
                    },
                    "default": {
                        "description": "Error",
                        "schema": {
                            "$ref": "#/definitions/apperr.appError"
                        }
                    }
                }
            }
        },
        "/users": {
            "get": {
                "security": [
                    {
                        "BearerAuth": []
                    }
                ],
                "description": "Returns all users. Requires admin role.",
                "produces": [
                    "application/json"
                ],
                "tags": [
                    "users"
                ],
                "summary": "List users",
                "responses": {
                    "200": {
                        "description": "OK",
                        "schema": {
                            "type": "array",
                            "items": {
                                "$ref": "#/definitions/user.User"
                            }
                        }
                    },
                    "default": {
                        "description": "Error",
                        "schema": {
                            "$ref": "#/definitions/apperr.appError"
                        }
                    }
                }
            }
        },
        "/users/{user_id}": {
            "get": {
                "security": [
                    {
                        "BearerAuth": []
                    }
                ],
                "description": "Returns a single user by ID. Requires admin role or self.",
                "produces": [
                    "application/json"
                ],
                "tags": [
                    "users"
                ],
                "summary": "Get user by ID",
                "parameters": [
                    {
                        "type": "string",
                        "description": "User ID",
                        "name": "user_id",
                        "in": "path",
                        "required": true
                    }
                ],
                "responses": {
                    "200": {
                        "description": "OK",
                        "schema": {
                            "$ref": "#/definitions/user.User"
                        }
                    },
                    "default": {
                        "description": "Error",
                        "schema": {
                            "$ref": "#/definitions/apperr.appError"
                        }
                    }
                }
            },
            "put": {
                "security": [
                    {
                        "BearerAuth": []
                    }
                ],
                "description": "Updates user's basic fields. Requires admin role or self.",
                "consumes": [
                    "application/json"
                ],
                "tags": [
                    "users"
                ],
                "summary": "Update user",
                "parameters": [
                    {
                        "type": "string",
                        "description": "User ID",
                        "name": "user_id",
                        "in": "path",
                        "required": true
                    },
                    {
                        "description": "Update user payload",
                        "name": "request",
                        "in": "body",
                        "required": true,
                        "schema": {
                            "$ref": "#/definitions/http.UpdateUserInput"
                        }
                    }
                ],
                "responses": {
                    "204": {
                        "description": "No Content"
                    },
                    "default": {
                        "description": "Error",
                        "schema": {
                            "$ref": "#/definitions/apperr.appError"
                        }
                    }
                }
            },
            "delete": {
                "security": [
                    {
                        "BearerAuth": []
                    }
                ],
                "description": "Deletes a user by ID. Requires admin role.",
                "tags": [
                    "users"
                ],
                "summary": "Delete user",
                "parameters": [
                    {
                        "type": "string",
                        "description": "User ID",
                        "name": "user_id",
                        "in": "path",
                        "required": true
                    }
                ],
                "responses": {
                    "204": {
                        "description": "No Content"
                    },
                    "default": {
                        "description": "Error",
                        "schema": {
                            "$ref": "#/definitions/apperr.appError"
                        }
                    }
                }
            }
        },
        "/users/{user_id}/password": {
            "post": {
                "security": [
                    {
                        "BearerAuth": []
                    }
                ],
                "description": "Changes password for the specified user (old -\u003e new). Requires admin role or self. If admin changes password, old password is not checked.",
                "consumes": [
                    "application/json"
                ],
                "tags": [
                    "users"
                ],
                "summary": "Change user password",
                "parameters": [
                    {
                        "type": "string",
                        "description": "User ID",
                        "name": "user_id",
                        "in": "path",
                        "required": true
                    },
                    {
                        "description": "Change password payload",
                        "name": "request",
                        "in": "body",
                        "required": true,
                        "schema": {
                            "$ref": "#/definitions/http.ChangePasswordInput"
                        }
                    }
                ],
                "responses": {
                    "204": {
                        "description": "No Content"
                    },
                    "default": {
                        "description": "Error",
                        "schema": {
                            "$ref": "#/definitions/apperr.appError"
                        }
                    }
                }
            }
        }
    },
    "definitions": {
        "apperr.Code": {
            "type": "string",
            "enum": [
                "core/bad_request",
                "core/unauthorized",
                "core/forbidden",
                "core/internal_error"
            ],
            "x-enum-varnames": [
                "CodeBadRequest",
                "CodeUnauthorized",
                "CodeForbidden",
                "CodeInternal"
            ]
        },
        "apperr.Field": {
            "type": "string",
            "enum": [
                "request"
            ],
            "x-enum-varnames": [
                "FieldRequest"
            ]
        },
        "apperr.Rule": {
            "type": "string",
            "enum": [
                "required",
                "too_long",
                "cycle",
                "max_hierarchy_depth",
                "invalid_format",
                "too_short",
                "duplicate",
                "mismatch",
                "forbidden",
                "invalid_state",
                "not_found"
            ],
            "x-enum-varnames": [
                "RuleRequired",
                "RuleTooLong",
                "RuleCycle",
                "RuleMaxHierarchy",
                "RuleInvalidFormat",
                "RuleTooShort",
                "RuleDuplicate",
                "RuleMismatch",
                "RuleForbidden",
                "RuleInvalidState",
                "RuleNotFound"
            ]
        },
        "apperr.Violation": {
            "type": "object",
            "properties": {
                "field": {
                    "$ref": "#/definitions/apperr.Field"
                },
                "params": {
                    "type": "object",
                    "additionalProperties": {}
                },
                "rule": {
                    "$ref": "#/definitions/apperr.Rule"
                }
            }
        },
        "apperr.appError": {
            "type": "object",
            "properties": {
                "code": {
                    "$ref": "#/definitions/apperr.Code"
                },
                "message": {
                    "description": "Message for user",
                    "type": "string"
                },
                "violations": {
                    "type": "array",
                    "items": {
                        "$ref": "#/definitions/apperr.Violation"
                    }
                }
            }
        },
        "auth.RefreshToken": {
            "type": "object",
            "properties": {
                "session_id": {
                    "type": "string"
                },
                "token": {
                    "type": "string"
                }
            }
        },
        "auth.Role": {
            "type": "string",
            "enum": [
                "admin",
                "read",
                "write"
            ],
            "x-enum-varnames": [
                "RoleAdmin",
                "RoleRead",
                "RoleWrite"
            ]
        },
        "auth.Session": {
            "type": "object",
            "properties": {
                "created_at": {
                    "type": "string"
                },
                "expires_at": {
                    "type": "string"
                },
                "id": {
                    "type": "string"
                },
                "session_version": {
                    "type": "integer"
                },
                "user_id": {
                    "type": "string"
                }
            }
        },
        "auth.Tokens": {
            "type": "object",
            "properties": {
                "access_token": {
                    "type": "string"
                },
                "refresh_token": {
                    "$ref": "#/definitions/auth.RefreshToken"
                }
            }
        },
        "auth.UserRole": {
            "type": "object",
            "properties": {
                "entity_id": {
                    "type": "string"
                },
                "role": {
                    "$ref": "#/definitions/auth.Role"
                },
                "user_id": {
                    "type": "string"
                }
            }
        },
        "entity.Entity": {
            "type": "object",
            "properties": {
                "content": {
                    "type": "string"
                },
                "created_at": {
                    "type": "string"
                },
                "created_by": {
                    "type": "string"
                },
                "current_version": {
                    "type": "integer"
                },
                "id": {
                    "type": "string"
                },
                "name": {
                    "type": "string"
                },
                "parent_id": {
                    "type": "string"
                },
                "type": {
                    "$ref": "#/definitions/entity.Type"
                },
                "updated_at": {
                    "type": "string"
                },
                "updated_by": {
                    "type": "string"
                }
            }
        },
        "entity.Node": {
            "type": "object",
            "properties": {
                "children": {
                    "type": "array",
                    "items": {
                        "$ref": "#/definitions/entity.Node"
                    }
                },
                "id": {
                    "type": "string"
                },
                "name": {
                    "type": "string"
                },
                "parent_id": {
                    "type": "string"
                },
                "type": {
                    "$ref": "#/definitions/entity.Type"
                }
            }
        },
        "entity.Type": {
            "type": "string",
            "enum": [
                "article",
                "department"
            ],
            "x-enum-varnames": [
                "TypeArticle",
                "TypeDepartment"
            ]
        },
        "http.ChangePasswordInput": {
            "type": "object",
            "properties": {
                "new_password": {
                    "type": "string"
                },
                "old_password": {
                    "type": "string"
                }
            }
        },
        "http.CreateEntityResp": {
            "type": "object",
            "properties": {
                "id": {
                    "type": "string"
                }
            }
        },
        "http.CreateUserInput": {
            "type": "object",
            "properties": {
                "email": {
                    "type": "string"
                },
                "name": {
                    "type": "string"
                },
                "password": {
                    "type": "string"
                }
            }
        },
        "http.LoginInput": {
            "type": "object",
            "properties": {
                "email": {
                    "type": "string"
                },
                "password": {
                    "type": "string"
                }
            }
        },
        "http.UpdateEntityInput": {
            "type": "object",
            "properties": {
                "content": {
                    "type": "string"
                },
                "is_draft": {
                    "type": "boolean"
                },
                "name": {
                    "type": "string"
                },
                "parent_id": {
                    "type": "string"
                }
            }
        },
        "http.UpdateUserInput": {
            "type": "object",
            "properties": {
                "email": {
                    "type": "string"
                },
                "name": {
                    "type": "string"
                }
            }
        },
        "usecase.CreateEntityCmd": {
            "type": "object",
            "properties": {
                "content": {
                    "type": "string"
                },
                "is_draft": {
                    "type": "boolean"
                },
                "name": {
                    "type": "string"
                },
                "parent_id": {
                    "type": "string"
                },
                "type": {
                    "$ref": "#/definitions/entity.Type"
                }
            }
        },
        "user.User": {
            "type": "object",
            "properties": {
                "created_at": {
                    "type": "string"
                },
                "deleted_at": {
                    "type": "string"
                },
                "email": {
                    "type": "string"
                },
                "id": {
                    "type": "string"
                },
                "name": {
                    "type": "string"
                },
                "session_version": {
                    "type": "integer"
                },
                "updated_at": {
                    "type": "string"
                }
            }
        }
    },
    "securityDefinitions": {
        "BearerAuth": {
            "type": "apiKey",
            "name": "Authorization",
            "in": "header"
        }
    }
}